ylim = c(-25, -46),
output_crs = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# make map with ggplot2
ll_ns_gridded %>%
filter(lat_bin < -25) %>%
ggplot() +
geom_raster(aes(x = lon_bin,
y = lat_bin,
fill = ratio_ns)) +
geom_gfw_eez(lwd = 1) +
geom_gfw_land() +
geom_sf(data = tdc_sf, fill = gfw_palette("map_country_dark")[1]) +
geom_path(data = aoi_poly, aes(x = x, y = y, group = id), colour = "white") +
labs(title = "Ratio of night to day setting in South Atlantic",
subtitle = "1 Jan. 2019 - 30 June 2021",
x = "lon",
y = "lat") +
scale_fill_gradientn(colours = c(gfw_palette("orange")[1], wes_palette("Darjeeling1")[5]),
limits = c(0,1),
oob = scales::squish,
na.value = NA,
name = NULL,
breaks = c(0,1),
labels = c("All day sets", "All night sets")) +
theme_gfw_map_cian() +
theme(plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.title = element_blank(),
axis.text = element_text(size = 16),
legend.text = element_text(size = 16)) +
coord_sf(xlim = c(bounding_1$box_out[['xmin']], bounding_1$box_out[['xmax']]),
ylim = c(bounding_1$box_out[['ymin']], bounding_1$box_out[['ymax']]),
crs = bounding_1$out_crs)
ll_ns %>%
mutate(month = lubridate::month(start_time),
year = lubridate::year(start_time)) %>%
filter(start_lat <= -25 | end_lat <= -25) %>%
ggplot() +
geom_bar(aes(x = month, fill = cat3)) +
facet_wrap(~year, ncol = 1) +
scale_fill_discrete(type = rev(gfw_palette("chart")[c(1,7)]),
name = "Time of setting",
labels = c("Day", "Night")) +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")) +
labs(x = "Month",
y = "Longline sets",
title = "Longline sets per month",
subtitle = "South Atlantic") +
theme_gfw_cian() +
theme(plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 16),
strip.text = element_text(size = 16),
legend.position = "bottom")
# create a dataframe of the 10 flags that deployed the most sets in the region
# order these flags by the number of longline sets
# used to reorder the flags in the next plot
top_10_by_flag <- ll_ns %>%
filter(!is.na(best_flag),
start_lat <= -25) %>%
group_by(best_flag) %>%
summarise(n = n()) %>%
top_n(10, wt = n) %>%
arrange(desc(n))
# plot longline sets per flag, coloured by time of setting (night or day)
ll_ns %>%
# include only flags from top 10
filter(best_flag %in% top_10_by_flag$best_flag,
(start_lat <= -25 | end_lat <= -25)) %>%
# reorder best_flag according to the order in top_10_by_flag
mutate(best_flag = best_flag %>%
factor(levels = top_10_by_flag[["best_flag"]]) %>%
recode_factor("TWN" = "TPE")) %>%
ggplot() +
geom_bar(aes(x = best_flag, fill = as.factor(cat3))) +
scale_fill_discrete(type = rev(gfw_palette("chart")[c(1,7)]),
name = "Time of setting",
labels = c("Day", "Night")) +
labs(x = "Flag",
y = "Longline sets",
title = "Night setting by flag",
subtitle = "South Atlantic") +
theme_gfw_cian() +
theme(plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.position = "bottom")
ll_ns_tdc <- ll_ns %>%
filter((start_lon %>% between(-18, 12) & start_lat %>% between(-46, -40)) |
(end_lon %>% between(-18, 12) & end_lat %>% between(-46, -40)))
ll_ns_tdc %>%
mutate(month = lubridate::month(start_time),
year = lubridate::year(start_time)) %>%
ggplot() +
geom_bar(aes(x = month, fill = cat3)) +
facet_wrap(~year, ncol = 1) +
scale_fill_discrete(type = rev(gfw_palette("chart")[c(1,7)]),
name = "Time of setting",
labels = c("Day", "Night")) +
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"),
limits = c(1,12)) +
labs(x = "Month",
y = "Longline sets",
title = "Longline sets per month",
subtitle = "Southeast Atlantic") +
theme_gfw_cian() +
theme(plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 20),
legend.position = "bottom",
legend.title = element_text(size = 20),
legend.text = element_text(size = 16),
strip.text = element_text(size = 16))
# create a dataframe of the 10 flags that deployed the most sets in the region
# order these flags by the number of longline sets
# used to reorder the flags in the next plot
top_aoi_by_flag <- ll_ns_tdc %>%
filter(!is.na(best_flag)) %>%
group_by(best_flag) %>%
summarise(n = n(),
prop = n/nrow(ll_ns_tdc),
n_vessels = n_distinct(ssvid)) %>%
arrange(desc(n))
# plot longline sets per flag, coloured by time of setting (night or day)
ll_ns_tdc %>%
mutate(month = lubridate::month(start_time),
year = lubridate::year(start_time),
best_flag = best_flag %>% factor(levels = top_aoi_by_flag[["best_flag"]])) %>%
filter(best_flag %in% c("JPN", "KOR")) %>%
ggplot() +
geom_bar(aes(x = best_flag, fill = as.factor(cat3))) +
scale_fill_discrete(type = rev(gfw_palette("chart")[c(1,7)]),
name = "Time of setting",
labels = c("Day", "Night")) +
labs(x = "Flag",
y = "Longline sets",
title = "Night setting by flag",
subtitle = "Southeast Atlantic") +
theme_gfw_cian() +
theme(plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 16))
ll_ns_gridded_2 <- ll_ns %>%
dplyr::select(best_flag, start_lon, set_id, start_lat, end_lon, end_lat, start_time) %>%
rowwise() %>%
mutate(mean_lon = mean(c(start_lon, end_lon), na.rm = TRUE), # average longitude and latitude between start and end locations
mean_lat = mean(c(start_lat, end_lat), na.rm = TRUE),
lon_bin = floor(mean_lon*10)/10, # set the grid resolution to one 10th of a degree
lat_bin = floor(mean_lat*10)/10,
date = lubridate::date(start_time) # use the start time to assign a date to each set
) %>%
group_by(best_flag, lat_bin, lon_bin) %>%
filter(best_flag == max(best_flag)) %>%
mutate(flag_2 = if_else(best_flag %in% c("JPN", "KOR"), best_flag, "other"))
# set the bounding area for the map
bounding_1 <- transform_box(xlim = c(-62, 25),
ylim = c(-25, -46),
output_crs = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# make map with ggplot2
ll_ns_gridded_2 %>%
filter(lat_bin < -25) %>%
ggplot() +
geom_raster(aes(x = lon_bin,
y = lat_bin,
fill = flag_2)) +
geom_gfw_eez(lwd = 1) +
geom_gfw_land() +
geom_sf(data = tdc_sf, fill = gfw_palette("map_country_dark")[1]) +
labs(title = "Longline sets by Japanese and Korean vessels",
subtitle = "1 Jan. 2019 - 30 June 2021",
x = "lon",
y = "lat") +
scale_fill_manual(values = gfw_palette("diverging")[c(1,7,4)],
labels = c("JPN", "KOR", "other"),
na.value = NA,
name = NULL) +
geom_path(data = aoi_poly, aes(x = x, y = y, group = id), colour = "white") +
theme_gfw_map_cian() +
theme(plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.title = element_blank(),
axis.text = element_text(size = 16),
legend.text = element_text(size = 16)) +
coord_sf(xlim = c(bounding_1$box_out[['xmin']], bounding_1$box_out[['xmax']]),
ylim = c(bounding_1$box_out[['ymin']], bounding_1$box_out[['ymax']]),
crs = bounding_1$out_crs)
dawn_times <- ll_ns_tdc %>%
summarise(start_ndawn = mean(start_ndawn)) %>%
mutate(start_ndawn = ymd_hms("2020-01-01 00:00:00") + (start_ndawn*60*60))
ll_ns_tdc %>%
mutate(start = ymd_hms("2020-01-01 00:00:00") + local_time(start_time, units = "hours"),
end = ymd_hms("2020-01-01 00:00:00") + local_time(end_time, units = "hours")) %>%
dplyr::select(start, end) %>%
pivot_longer(cols = start:end, names_to = "Set", values_to = "time_of_day") %>%
mutate(Set = Set %>% factor(levels = c("start", "end"))) %>%
ggplot() +
# use stat_density instead of geom_density so the legend symbols are lines rather than boxes
stat_density(aes(x = time_of_day, colour = Set, linetype = Set),
geom = "line", position = "identity", alpha = 1, size = 1) +
geom_vline(data = dawn_times, aes(xintercept = start_ndawn), colour = gfw_palette("chart")[5], size = 1) +
scale_x_datetime(date_labels = "%H:%M") +
scale_colour_manual(name = "Setting",
values = c(gfw_palette("chart")[1], "grey50"),
labels = c("Start", "End")) +
scale_linetype_manual(name = "Setting",
values = c(1,2),
labels = c("Start", "End")) +
labs(x = "Time of day",
y = "Proportion of sets",
title = "Time of setting and hauling of longlines",
subtitle = "Southeast Atlantic") +
theme_gfw_cian() +
theme() +
theme(plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.text = element_text(size = 12),
# axis.text.y = element_blank(),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 16))
# set working directory to parent folder
knitr::opts_knit$set(root.dir = normalizePath(".."))
# run script with custom ggplot theme functions
source("analysis/theme_gfw modified funs - cian.R", local = knitr::knit_global())
# run script with custom ggplot theme functions
source("analysis/theme_gfw modified funs - cian.R", local = knitr::knit_global())
# run script with custom ggplot theme functions
source("analysis/theme_gfw modified funs - cian.R", local = knitr::knit_global())
# set working directory to parent folder
knitr::opts_knit$set(root.dir = normalizePath(".."))
# run script with custom ggplot theme functions
source("analysis/theme_gfw modified funs - cian.R", local = knitr::knit_global())
library(tidyverse)
library(bigrquery)
library(DBI)
library(fishwatchr)
library(glue)
library(lubridate)
library(here)
library(sf)
library(extrafont)
library(patchwork)
library(terra)
ll_aoi <- read_rds("data_production/data/longliner_dist_2016_2021_aoi.rds")
ll_vessels_flag_by_year <- ll_aoi %>%
mutate(year = date %>% lubridate::year()) %>%
group_by(year, best_flag, aoi) %>%
summarise(fishing_hours = sum(fishing_hours, na.rm = TRUE),
n_vessels = n_distinct(ssvid),
.groups = "keep")
bsh_catch <- read.csv("data_production/data/iccat_bsh_catch_atlantic_south_2010_2020.csv")
bsh_catch <- read.csv("data_production/data/iccat_bsh_catch_atlantic_south_2010_2020.csv")
# set working directory to parent folder
knitr::opts_knit$set(root.dir = normalizePath(".."))
bsh_catch <- read.csv("data_production/data/iccat_bsh_catch_atlantic_south_2010_2020.csv")
bsh_catch <- read.csv("data_production/data/iccat_bsh_catch_atlantic_south_2010_2020.csv")
bsh_catch <- read.csv("data_production/data/iccat_bsh_catch_atlantic_south_2010_2020.csv")
# reformat data into a usable structure
bsh_catch <- bsh_catch %>%
pivot_longer(cols = X2010:X2020,
names_to = "year",
values_to = "catch") %>%
mutate(year = year %>% str_sub(start = 2) %>% as.numeric())
# create a summary table of the top 10 flags that caught the most blue shark
# useful for plotting
bsh_top_flags <- bsh_catch %>%
filter(!is.na(flag),
year %>% between(2016, 2020)) %>%
group_by(flag) %>%
summarise(catch = sum(catch, na.rm=TRUE)) %>%
arrange(desc(catch)) %>%
top_n(10)
# create a barplot of total blue shark catch per year per flag
bsh_catch %>%
mutate(flag = flag %>% factor(levels = bsh_top_flags$flag)) %>%
filter(!is.na(flag),
year %>% between(2016, 2020)) %>%
ggplot() +
geom_col(aes(x = flag, y = catch), fill = gfw_palette("chart")[1]) +
scale_x_discrete(labels = c("ESP", "PRT", "BRA", "JPN", "NAM", "TPE", "ZAF", "CIV", "KOR", "BLZ")) +
labs(x = "Flag",
y = "BSH catch (tonnes)",
title = "Blue shark (BSH) catch in the South Atlantic\nreported to ICCAT",
subtitle = "2016 - 2020") +
theme_gfw_cian() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
plot.title = element_text(size = 16),
plot.subtitle = element_text(size = 14),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
strip.text = element_text(size = 16),
legend.position = "bottom")
sbt_catch <- read.csv("data_production/data/sbt_catch_ccsbt_1965_2020.csv")
sbt_catch <- read.csv("data_production/data/sbt_catch_ccsbt_1965_2020.csv")
sbt_catch <- sbt_catch %>%
filter(year %>% between(2016, 2020),
lon %>% between(-20, 15),
lat %>% between(-50, -40)) %>%
mutate(date = str_c(year, month, sep = "-") %>% lubridate::ym(),
tonnes = tonnes %>% as.numeric())
p_s_catch <- sbt_catch %>%
group_by(date) %>%
summarise(tonnes = sum(tonnes)) %>%
ggplot() +
geom_col(aes(x = date, y = tonnes), fill = gfw_palette("chart")[1]) +
scale_x_date(date_breaks = "1 year",
date_labels = "%Y",
limits = c(ymd("2016-01-01"), ymd("2020-12-31"))) +
labs(x = "Date (monthly bins)",
y = "SBT catch (tonnes)") +
# scale_y_continuous(limits = c(0, 20000)) +
theme_gfw_cian() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
# axis.text.x = element_blank(),
# axis.title.x = element_blank(),
plot.title = element_text(size = 16),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
strip.text = element_text(size = 16),
legend.position = "bottom")
p_s_hours_2 <- ll_sst_month %>%
filter(aoi == "south") %>%
ggplot() +
geom_col(aes(x = month, y = fishing_hours), fill = gfw_palette("chart")[1]) +
scale_x_date(date_breaks = "1 year",
date_labels = "%Y",
limits = c(ymd("2016-01-01"), ymd("2020-12-31"))) + # change the time period to up to 2020
labs(x = "Date (monthly bins)",
y = "Fishing hours") +
scale_y_continuous(limits = c(0, 20000)) +
theme_gfw_cian() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
plot.title = element_text(size = 16),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
strip.text = element_text(size = 16),
legend.position = "bottom")
ll_vessels_flag_by_year <- ll_aoi %>%
mutate(year = date %>% lubridate::year()) %>%
group_by(year, best_flag, aoi) %>%
summarise(fishing_hours = sum(fishing_hours, na.rm = TRUE),
n_vessels = n_distinct(ssvid),
.groups = "keep")
ll_monthly_summary <- ll_aoi %>%
filter(!is.na(aoi)) %>%
mutate(month = lubridate::floor_date(date, unit = "month")) %>%
group_by(month, aoi) %>%
summarise(fishing_hours = sum(fishing_hours, na.rm = TRUE),
n_vessels = n_distinct(ssvid, na.rm = TRUE),
.groups = "keep")
# read in raster filenames
file_names_sst <- list.files(path = "data_production/data/rasters/aqua_modis_sst_float_tiff", pattern = "*.tiff", full.names = TRUE)
# load these files as a single multi-layer raster
sst_rast <- terra::rast(file_names_sst)
# change the names of each raster layer to the year and month (format: YYYY-MM)
names(sst_rast) <-  names(sst_rast) %>% str_sub(8, -7)
# Replace outlier temperatures (>100°C) with NA
sst_rast[sst_rast >= 100] <- NA
sst_rast <- terra::rast("data_production/data/rasters/sst_2016_2021_multiyear.tiff")
sst_summary <- read_rds("data_production/data/sst_summary_longliner_aoi_2016_2021.rds")
sst_summary <- sst_summary %>%
mutate(date = date %>% lubridate::ym(),
month = date %>% lubridate::month(),
year = date %>% lubridate::year())
ll_sst_month <- merge(x = ll_monthly_summary,
y = sst_summary %>%
# rename columns to avoid confusion in combined dataframe
dplyr::select(month = date, aoi, sst_min = min, sst_mean = mean, sst_sd = sd, sst_max = max),
# merge by month and area of interest (aoi)
by = c("month", "aoi"), all.x = TRUE)
# create a set of labels for annotating the plots
aoi_labs <- c("north" = "North", "south" = "South")
# fishing hours
p_hours <- ll_sst_month %>%
ggplot() +
geom_col(aes(x = month, y = fishing_hours), fill = gfw_palette("chart")[1]) +
scale_x_date(date_breaks = "1 year",
date_labels = "%Y",
limits = c(ymd("2016-01-01"), ymd("2021-10-31"))) +
labs(x = "Date (monthly bins)",
y = "Fishing hours") +
scale_y_continuous(limits = c(0, 20000)) +
facet_grid(.~aoi,
labeller = labeller(aoi = aoi_labs)) +
theme_gfw_cian() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
plot.title = element_text(size = 16),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
strip.text = element_text(size = 16),
legend.position = "bottom",
panel.spacing = unit(2, "lines"))
# number of vessels
p_fv <- ll_sst_month %>%
ggplot() +
geom_col(aes(x = month, y = n_vessels), fill = gfw_palette("chart")[1]) +
scale_x_date(date_breaks = "1 year",
date_labels = "%Y",
limits = c(ymd("2016-01-01"), ymd("2021-10-31"))) +
labs(x = "Date (monthly bins)",
y = "Vessels") +
scale_y_continuous(limits = c(0, 45)) +
facet_grid(.~aoi,
labeller = labeller(aoi = aoi_labs)) +
theme_gfw_cian() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
plot.title = element_text(size = 16),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
strip.text = element_blank(),
legend.position = "bottom",
panel.spacing = unit(2, "lines"))
# SST
p_sst <- ll_sst_month %>%
ggplot() +
geom_ribbon(aes(x = month, ymin = sst_mean - sst_sd, ymax = sst_mean + sst_sd),
fill = gfw_palette("chart")[5], alpha = 0.2) +
geom_line(aes(x = month, y = sst_mean), colour = gfw_palette("chart")[5]) +
scale_x_date(date_breaks = "1 year",
date_labels = "%Y",
limits = c(ymd("2016-01-01"), ymd("2021-10-31"))) +
labs(x = "Date",
y = "SST (°C)"
) +
scale_y_continuous(limits = c(0, 25)) +
facet_grid(.~aoi,
labeller = labeller(aoi = aoi_labs)) +
theme_gfw_cian() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
strip.text = element_blank(),
legend.position = "bottom",
panel.spacing = unit(2, "lines"))
# combine plots
p_hours / p_fv / p_sst +
plot_annotation(title = "Fishing activity by longline vessels and sea surface temperature (SST)",
theme = theme_gfw_cian() + theme(plot.title = element_text(size = 20)))
p_s_catch <- sbt_catch %>%
group_by(date) %>%
summarise(tonnes = sum(tonnes)) %>%
ggplot() +
geom_col(aes(x = date, y = tonnes), fill = gfw_palette("chart")[1]) +
scale_x_date(date_breaks = "1 year",
date_labels = "%Y",
limits = c(ymd("2016-01-01"), ymd("2020-12-31"))) +
labs(x = "Date (monthly bins)",
y = "SBT catch (tonnes)") +
# scale_y_continuous(limits = c(0, 20000)) +
theme_gfw_cian() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
# axis.text.x = element_blank(),
# axis.title.x = element_blank(),
plot.title = element_text(size = 16),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
strip.text = element_text(size = 16),
legend.position = "bottom")
p_s_hours_2 <- ll_sst_month %>%
filter(aoi == "south") %>%
ggplot() +
geom_col(aes(x = month, y = fishing_hours), fill = gfw_palette("chart")[1]) +
scale_x_date(date_breaks = "1 year",
date_labels = "%Y",
limits = c(ymd("2016-01-01"), ymd("2020-12-31"))) + # change the time period to up to 2020
labs(x = "Date (monthly bins)",
y = "Fishing hours") +
scale_y_continuous(limits = c(0, 20000)) +
theme_gfw_cian() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
plot.title = element_text(size = 16),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
strip.text = element_text(size = 16),
legend.position = "bottom")
p_s_hours_2 / p_s_catch +
plot_annotation(title = "Fishing activity by longline vessels and catch of Southern Bluefin Tuna (SBT)",
subtitle = "Southern fishing area",
theme = theme_gfw_cian() + theme(plot.title = element_text(size = 16), plot.subtitle = element_text(size = 14)))
p_s_hours_2 / p_s_catch +
plot_annotation(title = "Fishing activity by longline vessels and catch of Southern Bluefin Tuna (SBT)",
subtitle = "Southern fishing area",
theme = theme_gfw_cian() + theme(plot.title = element_text(size = 16), plot.subtitle = element_text(size = 14)))
