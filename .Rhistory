theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
plot.title = element_text(size = 16),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
strip.text = element_blank(),
legend.position = "bottom",
panel.spacing = unit(2, "lines"))
# line and ribbon plot of mean (+/- SD) SST per month
p_sst <- ll_sst_month %>%
ggplot() +
geom_ribbon(aes(x = month, ymin = sst_mean - sst_sd, ymax = sst_mean + sst_sd),
fill = gfw_palette("chart")[5], alpha = 0.2) +
geom_line(aes(x = month, y = sst_mean), colour = gfw_palette("chart")[5]) +
scale_x_date(date_breaks = "1 year",
date_labels = "%Y",
limits = c(ymd("2016-01-01"), ymd("2021-10-31"))) +
labs(x = "Date",
y = "SST (째C)"
) +
scale_y_continuous(limits = c(0, 25)) +
facet_grid(.~aoi,
labeller = labeller(aoi = aoi_labs)) +
theme_gfw_cian() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
plot.title = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
strip.text = element_blank(),
legend.position = "bottom",
panel.spacing = unit(2, "lines"))
# combine plots one on top of another
p_hours / p_fv / p_sst +
plot_annotation(title = "Fishing activity by longline vessels and sea surface temperature (SST)",
theme = theme_gfw_cian() + theme(plot.title = element_text(size = 22)))
p_hours / p_fv / p_sst +
plot_annotation(title = "Fishing activity by longline vessels and sea surface temperature (SST)",
theme = theme_gfw_cian() + theme(plot.title = element_text(size = 22)))
# create a set of labels for annotating the plots
aoi_labs <- c("north" = "North", "south" = "South")
# barplot of fishing hours per month
p_hours <- ll_sst_month %>%
ggplot() +
geom_col(aes(x = month, y = fishing_hours), fill = gfw_palette("chart")[1]) +
scale_x_date(date_breaks = "1 year",
date_labels = "%Y",
limits = c(ymd("2016-01-01"), ymd("2021-12-31"))) +
labs(x = "Date (monthly bins)",
y = "Fishing hours") +
scale_y_continuous(limits = c(0, 20000)) +
# split the plot into facets for the north and south areas
facet_grid(.~aoi,
labeller = labeller(aoi = aoi_labs)) +
theme_gfw_cian() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
plot.title = element_text(size = 16),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
strip.text = element_text(size = 16),
legend.position = "bottom",
panel.spacing = unit(2, "lines"))
# barplot of number of active longline vessels per month
p_fv <- ll_sst_month %>%
ggplot() +
geom_col(aes(x = month, y = n_vessels), fill = gfw_palette("chart")[1]) +
scale_x_date(date_breaks = "1 year",
date_labels = "%Y",
limits = c(ymd("2016-01-01"), ymd("2021-12-31"))) +
labs(x = "Date (monthly bins)",
y = "Vessels") +
scale_y_continuous(limits = c(0, 45)) +
facet_grid(.~aoi,
labeller = labeller(aoi = aoi_labs)) +
theme_gfw_cian() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
plot.title = element_text(size = 16),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
strip.text = element_blank(),
legend.position = "bottom",
panel.spacing = unit(2, "lines"))
# line and ribbon plot of mean (+/- SD) SST per month
p_sst <- ll_sst_month %>%
ggplot() +
geom_ribbon(aes(x = month, ymin = sst_mean - sst_sd, ymax = sst_mean + sst_sd),
fill = gfw_palette("chart")[5], alpha = 0.2) +
geom_line(aes(x = month, y = sst_mean), colour = gfw_palette("chart")[5]) +
scale_x_date(date_breaks = "1 year",
date_labels = "%Y",
limits = c(ymd("2016-01-01"), ymd("2021-12-31"))) +
labs(x = "Date",
y = "SST (째C)"
) +
scale_y_continuous(limits = c(0, 25)) +
facet_grid(.~aoi,
labeller = labeller(aoi = aoi_labs)) +
theme_gfw_cian() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
plot.title = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
strip.text = element_blank(),
legend.position = "bottom",
panel.spacing = unit(2, "lines"))
# combine plots one on top of another
p_hours / p_fv / p_sst +
plot_annotation(title = "Fishing activity by longline vessels and sea surface temperature (SST)",
theme = theme_gfw_cian() + theme(plot.title = element_text(size = 22)))
ll_sst_month %>% names()
ll_sst_month$month %>% summary()
sst_summary$month %>% summary()
sst_summary$date %>% summary()
sst_rast <- terra::rast("data_production/data/rasters/sst_2016_2021_multiyear.tiff")
names(sst_rast)
# read in raster filenames
file_names_sst <- list.files(path = "data_production/data/rasters/aqua_modis_sst_float_tiff", pattern = "*.tiff", full.names = TRUE)
# load these files as a single multi-layer raster
sst_rast <- terra::rast(file_names_sst)
# change the names of each raster layer to the year and month (format: YYYY-MM)
names(sst_rast) <-  names(sst_rast) %>% str_sub(8, -7)
# Replace outlier temperatures (>100째C) with NA
sst_rast[sst_rast >= 100] <- NA
# create a set of labels for annotating the plots
aoi_labs <- c("north" = "North", "south" = "South")
# barplot of fishing hours per month
p_hours <- ll_sst_month %>%
ggplot() +
geom_col(aes(x = month, y = fishing_hours), fill = gfw_palette("chart")[1]) +
scale_x_date(date_breaks = "1 year",
date_labels = "%Y",
limits = c(ymd("2016-01-01"), ymd("2021-12-31"))) +
labs(x = "Date (monthly bins)",
y = "Fishing hours") +
scale_y_continuous(limits = c(0, 20000)) +
# split the plot into facets for the north and south areas
facet_grid(.~aoi,
labeller = labeller(aoi = aoi_labs)) +
theme_gfw_cian() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
plot.title = element_text(size = 16),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
strip.text = element_text(size = 16),
legend.position = "bottom",
panel.spacing = unit(2, "lines"))
# barplot of number of active longline vessels per month
p_fv <- ll_sst_month %>%
ggplot() +
geom_col(aes(x = month, y = n_vessels), fill = gfw_palette("chart")[1]) +
scale_x_date(date_breaks = "1 year",
date_labels = "%Y",
limits = c(ymd("2016-01-01"), ymd("2021-12-31"))) +
labs(x = "Date (monthly bins)",
y = "Vessels") +
scale_y_continuous(limits = c(0, 45)) +
facet_grid(.~aoi,
labeller = labeller(aoi = aoi_labs)) +
theme_gfw_cian() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
plot.title = element_text(size = 16),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
strip.text = element_blank(),
legend.position = "bottom",
panel.spacing = unit(2, "lines"))
# line and ribbon plot of mean (+/- SD) SST per month
p_sst <- ll_sst_month %>%
ggplot() +
geom_ribbon(aes(x = month, ymin = sst_mean - sst_sd, ymax = sst_mean + sst_sd),
fill = gfw_palette("chart")[5], alpha = 0.2) +
geom_line(aes(x = month, y = sst_mean), colour = gfw_palette("chart")[5]) +
scale_x_date(date_breaks = "1 year",
date_labels = "%Y",
limits = c(ymd("2016-01-01"), ymd("2021-12-31"))) +
labs(x = "Date",
y = "SST (째C)"
) +
scale_y_continuous(limits = c(0, 25)) +
facet_grid(.~aoi,
labeller = labeller(aoi = aoi_labs)) +
theme_gfw_cian() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
plot.title = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
strip.text = element_blank(),
legend.position = "bottom",
panel.spacing = unit(2, "lines"))
# combine plots one on top of another
p_hours / p_fv / p_sst +
plot_annotation(title = "Fishing activity by longline vessels and sea surface temperature (SST)",
theme = theme_gfw_cian() + theme(plot.title = element_text(size = 22)))
sst_rast
# load catch data locally
sbt_catch <- read.csv("data_production/data/sbt_catch_ccsbt_1965_2020.csv")
sbt_catch <- sbt_catch %>%
filter(year %>% between(2016, 2020),
lon %>% between(-20, 15),
lat %>% between(-50, -40)) %>%
mutate(date = str_c(year, month, sep = "-") %>% lubridate::ym(),
tonnes = tonnes %>% as.numeric())
p_s_catch <- sbt_catch %>%
group_by(date) %>%
summarise(tonnes = sum(tonnes)) %>%
ggplot() +
geom_col(aes(x = date, y = tonnes), fill = gfw_palette("chart")[1]) +
scale_x_date(date_breaks = "1 year",
date_labels = "%Y",
limits = c(ymd("2016-01-01"), ymd("2020-12-31"))) +
labs(x = "Date (monthly bins)",
y = "SBT catch (tonnes)") +
# scale_y_continuous(limits = c(0, 20000)) +
theme_gfw_cian() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(size = 16),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
strip.text = element_text(size = 16),
legend.position = "bottom")
p_s_hours_2 <- ll_sst_month %>%
filter(aoi == "south") %>%
ggplot() +
geom_col(aes(x = month, y = fishing_hours), fill = gfw_palette("chart")[1]) +
scale_x_date(date_breaks = "1 year",
date_labels = "%Y",
limits = c(ymd("2016-01-01"), ymd("2020-12-31"))) + # change the time period to up to 2020
labs(x = "Date (monthly bins)",
y = "Fishing hours") +
scale_y_continuous(limits = c(0, 20000)) +
theme_gfw_cian() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
plot.title = element_text(size = 16),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
strip.text = element_text(size = 16),
legend.position = "bottom")
p_s_hours_2 / p_s_catch +
plot_annotation(title = "Fishing activity by longline vessels and catch of Southern Bluefin Tuna (SBT)",
subtitle = "Southern fishing area",
theme = theme_gfw_cian() + theme(plot.title = element_text(size = 16), plot.subtitle = element_text(size = 14)))
bsh_catch <- read.csv("data_production/data/iccat_bsh_catch_atlantic_south_2010_2020.csv")
# reformat data into a more usable structure
bsh_catch <- bsh_catch %>%
pivot_longer(cols = X2010:X2020,
names_to = "year",
values_to = "catch") %>%
mutate(year = year %>% str_sub(start = 2) %>% as.numeric())
# create a summary table of the top 10 flags that caught the most blue shark
# useful for plotting
bsh_top_flags <- bsh_catch %>%
filter(!is.na(flag),
year %>% between(2016, 2020)) %>%
group_by(flag) %>%
summarise(catch = sum(catch, na.rm=TRUE)) %>%
arrange(desc(catch)) %>%
top_n(10)
# create a barplot of total blue shark catch per year per flag
bsh_catch %>%
mutate(flag = flag %>% factor(levels = bsh_top_flags$flag)) %>%
filter(!is.na(flag),
year %>% between(2016, 2020)) %>%
ggplot() +
geom_col(aes(x = flag, y = catch), fill = gfw_palette("chart")[1]) +
scale_x_discrete(labels = c("ESP", "PRT", "BRA", "JPN", "NAM", "TPE", "ZAF", "CIV", "KOR", "BLZ")) +
labs(x = "Flag",
y = "BSH catch (tonnes)",
title = "Blue shark (BSH) catch in the South Atlantic reported to ICCAT",
subtitle = "2016 - 2020") +
theme_gfw_cian() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(size = 16),
plot.subtitle = element_text(size = 14),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
legend.position = "bottom")
bsh_catch %>%
# filter to only include catch by Spanish-flagged vessels between 2016 and 2020
filter(flag == "EU-Espa챰a",
year %>% between(2016, 2020)) %>%
ggplot() +
geom_col(aes(x = year, y = catch), fill = gfw_palette("chart")[1]) +
labs(x = "Year",
y = "BSH catch (tonnes)",
title = "Blue shark (BSH) catch by Spanish-flagged longline vessels\nin the South Atlantic reported to ICCAT") +
theme_gfw_cian() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(size = 16),
plot.subtitle = element_text(size = 14),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
strip.text = element_text(size = 16),
legend.position = "bottom")
ll_aoi %>%
filter(aoi == "north",
best_flag == "ESP") %>%
mutate(year = date %>% lubridate::year()) %>%
group_by(year) %>%
summarise(fishing_hours = sum(fishing_hours, na.rm = TRUE),
n_vessels = n_distinct(ssvid, na.rm = TRUE),
.groups = "keep") %>%
ggplot() +
geom_col(aes(x = year, y = fishing_hours), fill = gfw_palette("chart")[1]) +
labs(x = "Year",
y = "Fishing hours",
title = "Fishing effort by Spanish-flagged longline vessels",
subtitle = "Northern fishing area") +
scale_x_continuous(n.breaks = 6) +
theme_gfw_cian() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(size = 16),
plot.subtitle = element_text(size = 14),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
legend.position = "bottom")
ll_aoi %>%
filter(aoi == "north",
best_flag == "ESP") %>%
mutate(year = date %>% lubridate::year()) %>%
group_by(year) %>%
summarise(fishing_hours = sum(fishing_hours, na.rm = TRUE),
n_vessels = n_distinct(ssvid, na.rm = TRUE),
.groups = "keep") %>%
ggplot() +
geom_col(aes(x = year, y = fishing_hours), fill = gfw_palette("chart")[1]) +
labs(x = "Year",
y = "Fishing hours",
title = "Fishing effort by Spanish-flagged longline vessels",
subtitle = "Northern fishing area") +
scale_x_continuous(n.breaks = 6) +
theme_gfw_cian() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(size = 16),
plot.subtitle = element_text(size = 14),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
legend.position = "bottom")
# set working directory to parent folder
knitr::opts_knit$set(root.dir = normalizePath(".."))
# run script with custom ggplot theme functions
source("analysis/theme_gfw modified funs - cian.R", local = knitr::knit_global())
library(tidyverse)    # data manipulation and plotting
library(bigrquery)    # querying data through BigQuery
library(DBI)          # database interface
library(fishwatchr)   # internal R package developed by Global Fishing Watch for common in-house analyses and functions
library(glue)         # used to format SQL queries in R
library(lubridate)    # format date time objects
library(here)         # useful package for specifying file locations
library(sf)           # simple features - used for spatial analysis
library(extrafont)    # load extra fonts for plotting
library(ggrepel)      # useful package for adding labels to ggplot objects
# Areas to be Avoided (ATBA)
atba_sf <- sf::st_read("geodata/tdc_atba/ATBA_consolidate_25nm_buffer_wgs84.shp")
st_crs(atba_sf) <- 4326 # set coordinate reference system to WGS84
# Shapefiles of Tristan da Cunha and Gough Island - sourced from OpenStreetMap
tdc_sf <- sf::st_read("geodata/tdc_osm/tristan_da_cunha_archipelago_osm.shp")
st_crs(tdc_sf) <- 4326
# Shapefile of Tristan EEZ only - sourced from Marine Regions
eez_tdc <- fishwatchr::eez_sf %>% filter(MRGID_EEZ1 == 8382)
vt_gridded <- readr::read_rds("data_production/data/gridded-vessel-activity-2019-2021.rds")
vt_transits <- readr::read_rds("data_production/data/vessel-traffic-eez-only-transit_id_fixed_v4.rds")
# which transits passed through the atba
transit_info <- vt_transits %>%
group_by(transit_id_eez) %>%
summarise(through_atba = sum(as.numeric(inside_atba)) > 0)
vt_transits <- vt_transits %>%
merge(transit_info, by = "transit_id_eez", all.x = TRUE)
# which transits slowed while in the atba
transit_speed <- vt_transits %>%
filter(inside_atba == TRUE) %>%
group_by(transit_id_eez) %>%
summarise(slowed_in_atba = min(speed_knots) <= 0.2)
vt_transits <- vt_transits %>%
merge(transit_speed, by = "transit_id_eez", all.x = TRUE)
transit_ports <- readr::read_rds("data_production/data/transit_ports_c4.rds")
transit_ports <- readr::read_rds("data_production/data/transit_ports_c4.rds")
transit_ports
# create long version of dataframe
# filter to only include ports of origin
# create a col called cat (short for category) and populate with "origin"
ports_origin <- transit_ports %>%
filter(!is.na(trip_start_anchorage_label)) %>%
mutate(port_label = str_c(trip_start_anchorage_label, trip_start_anchorage_country, sep = ", ")) %>%
group_by(port_label) %>%
summarise(n_voyages = n(),
lon = mean(trip_start_anchorage_lon, na.rm = TRUE),
lat = mean(trip_start_anchorage_lat, na.rm = TRUE)) %>%
mutate(cat = "origin")
# note there are 6 fewer destinations as 6 trips were still active at the end of our time range
# and hadn't yet reached a port
# filter to only include ports of origin
# create a col called cat (short for category) and populate with "origin"
ports_destination <- transit_ports %>%
filter(!is.na(trip_end_anchorage_label)) %>%
mutate(port_label = str_c(trip_end_anchorage_label, trip_end_anchorage_country, sep = ", ")) %>%
group_by(port_label) %>%
summarise(n_voyages = n(),
lon = mean(trip_end_anchorage_lon, na.rm = TRUE),
lat = mean(trip_end_anchorage_lat, na.rm = TRUE)) %>%
mutate(cat = "destination")
# bind the two dataframes together
ports_long <- rbind(ports_origin, ports_destination)
ports_long
n_distinct(ports_long$port_label)
# set the bounding are for the map
bounding_ports <- fishwatchr::transform_box(xlim = c(min(ports_long$lon) - 1,
max(ports_long$lon) + 1),
ylim = c(min(ports_long$lat) - 1,
max(ports_long$lat) + 1),
output_crs = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# create the map using ggplot2
ports_long %>%
# here we wanted to summarise the number of pots starting OR ending in each port
# so we used group_by(port_label), excluding the origin/destination category
group_by(port_label) %>%
summarise(n_voyages = sum(n_voyages), .groups = "keep",
lon = mean(lon),
lat = mean(lat)) %>%
ggplot() +
fishwatchr::geom_gfw_eez(theme = 'dark') +
fishwatchr::geom_gfw_land(theme = 'dark') +
geom_point(aes(x = lon, y = lat, size = n_voyages), alpha = 0.5, colour = gfw_palette("map_reception_light")[4]) +
scale_size_continuous(name = "No. visits") +
geom_sf(data = atba_sf, colour = gfw_palette("diverging")[1], linetype = 1, fill = NA) +
geom_sf(data = tdc_sf, fill = gfw_palette("map_country_dark")[1]) +
labs(title = "Ports visited by vessels transiting through ATBA",
subtitle = "April 1, 2020 to June 30, 2021") +
theme_gfw_map_cian(theme = 'dark') +
theme(legend.position = "bottom",
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12)) +
coord_sf(xlim = c(bounding_ports$box_out[['xmin']], bounding_ports$box_out[['xmax']]),
ylim = c(bounding_ports$box_out[['ymin']], bounding_ports$box_out[['ymax']]),
crs = bounding_ports$out_crs)
transits_post_atba <- vt_transits %>%
filter(slowed_in_atba == FALSE,
through_atba == TRUE,
date >= ymd("2020-04-01"),
!ssvid %in% sailing_vessels$ssvid) %>%
distinct(trip_id) %>%
pull(trip_id)
sailing_vessels <- vessels_by_n_transits %>%
unnest(shiptype) %>%
group_by(ssvid) %>%
top_n(1, wt = count) %>%
filter(best_flag == "FRA")
vessels_by_n_transits <- vt_transits %>%
filter(date >= ymd("2020-04-01"), # only inlucde transits after the ATBA was implemented
slowed_in_atba == FALSE, # that did not slow below 0.2 knots inside the ATBA
through_atba == TRUE) %>% # from transits that passed through the atba
group_by(ssvid, year) %>%
summarise(n_transits = n_distinct(transit_id_atba, na.rm = TRUE),
.groups = "keep") # count the number of transit_id_atba values
vessels_by_n_transits
sailing_vessels <- vessels_by_n_transits %>%
unnest(shiptype) %>%
group_by(ssvid) %>%
top_n(1, wt = count) %>%
filter(value == "Sailing")
sailing_vessels <- vessels_by_n_transits %>%
unnest(shiptype) %>%
group_by(ssvid) %>%
top_n(1, wt = count) %>%
filter(best_flag == "FRA")
vessels_by_n_transits <- readr::read_rds("data_production/data/vessels_by_n_transits_v2.rds")
sailing_vessels <- vessels_by_n_transits %>%
unnest(shiptype) %>%
group_by(ssvid) %>%
top_n(1, wt = count) %>%
filter(value == "Sailing")
sailing_vessels <- vessels_by_n_transits %>%
unnest(shiptype) %>%
group_by(ssvid) %>%
top_n(1, wt = count) %>%
filter(best_flag == "FRA")
transits_post_atba <- vt_transits %>%
filter(slowed_in_atba == FALSE,
through_atba == TRUE,
date >= ymd("2020-04-01"),
!ssvid %in% sailing_vessels$ssvid) %>%
distinct(trip_id) %>%
pull(trip_id)
transits_post_atba
transits_post_atba %>% head(10)
transits_post_atba[1:10]
